
TripleT project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000006c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000c6  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  000000c6  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  000000f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000744  00000000  00000000  00000115  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000004e1  00000000  00000000  00000859  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000152  00000000  00000000  00000d3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  00000e8c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000196  00000000  00000000  00000eb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000010  00000000  00000000  00001046  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .text         00000004  0000006c  0000006c  000000c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001058  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .text.main    00000002  00000070  00000070  000000c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
   8:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
   c:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
  10:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
  14:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
  18:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
  1c:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
  20:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
  24:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
  28:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
  2c:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
  30:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
  34:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
  38:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
  3c:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
  40:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
  44:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
  48:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
  4c:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>
  50:	0c 94 36 00 	jmp	0x6c	; 0x6c <_etext>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 38 00 	call	0x70	; 0x70 <main>
  64:	0c 94 34 00 	jmp	0x68	; 0x68 <_exit>

00000068 <_exit>:
  68:	f8 94       	cli

0000006a <__stop_program>:
  6a:	ff cf       	rjmp	.-2      	; 0x6a <__stop_program>

Disassembly of section .text:

0000006c <__bad_interrupt>:
  6c:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

00000070 <main>:
 */ 

#include <xc.h>

int main(void)
{
  70:	ff cf       	rjmp	.-2      	; 0x70 <main>
